<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iyeed.dao.db.write.xzn.system.SystemUserWriteDao">
	<resultMap id="SystemUserResult" type="com.iyeed.core.entity.system.SystemUser">
			<result property="id" column="id" />
			<result property="username" column="username" />
			<result property="password" column="password" />
			<result property="roleId" column="role_id" />
			<result property="createTime" column="create_time" />
			<result property="email" column="email" />
			<result property="tel" column="tel" />
			<result property="status" column="status" />
			<result property="userNo" column="user_no" />
			<result property="userType" column="user_type" />
			<result property="logins" column="logins" />
	</resultMap>

	<resultMap id="SystemUserBrandResult" type="com.iyeed.core.entity.system.SystemUserBrand">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="brandNo" column="brand_no" />
	</resultMap>

	<resultMap id="SystemBrandUserResult" type="com.iyeed.core.entity.system.vo.SystemBrandUserBean">
		<result property="userNo" column="user_no" />
		<result property="storeNo" column="store_no" />
		<result property="storeName" column="store_name" />
		<result property="brandNo" column="brand_no" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="SystemUserResult">
		select
		   *
		from [system_user]
		where id = #{id}
	</select>

	<select id="getByUsername" parameterType="String" resultMap="SystemUserBrandResult">
		select
		   *
		from [system_user_brand]
		where username = #{username}
	</select>

	<select id="getByUserNo" parameterType="String" resultMap="SystemUserResult">
		select
		   *
		from [system_user]
		where user_no = #{userNo}
	</select>

	<select id="getByNamePwd" parameterType="java.lang.String" resultMap="SystemUserResult">
		select * 
		from [system_user]
		where username = #{name} and password = #{password}
		and status=1
	</select>
	
	<select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from [system_user] t1
		<include refid="whereConditions" />
	</select>
	
	<delete id="del">
        delete from [system_user] where id = #{id}
	</delete>
	
	<select id="page"  parameterType="java.util.Map" resultType="com.iyeed.core.entity.system.SystemUser">
		select * from [system_user] t1
		<include refid="whereConditions" />
		order by id
		<if test="size != null and size &gt; 0">offset #{start} row fetch next #{size} row only</if>
	</select>
	
	<select id="list" resultType="com.iyeed.core.entity.system.SystemUser">
		select * from [system_user] t1
		order by id
	</select>

	<select id="getBrandUserList" parameterType="java.util.Map" resultMap="SystemBrandUserResult">
		select sus.user_no,ms.store_no,ms.store_name,ms.brand_no
		from [system_user] su, system_user_store sus, md_store ms
		where su.user_no = sus.user_no and sus.store_no = ms.store_no
		and ms.brand_no = #{queryMap.q_brandNo}
		order by sus.user_no
		<if test="size != null and size &gt; 0">offset #{start} row fetch next #{size} row only</if>
	</select>

	<select id="getBrandUserListCount" parameterType="java.util.Map" resultType="Integer">
		select count(1)
		from [system_user] su, system_user_store sus, md_store ms
		where su.user_no = sus.user_no and sus.store_no = ms.store_no
		and ms.brand_no = #{queryMap.q_brandNo}
	</select>
	
	<!-- 查询条件 -->
	<sql id="whereConditions">
		<where>
			<if test="queryMap.id != null and queryMap.id !=''"  > and id= #{queryMap.id}</if>
			<if test="queryMap.username != null and queryMap.username !=''"  > and username= #{queryMap.username}</if>
			<if test="queryMap.q_username != null and queryMap.q_username !=''"  > and username like CONCAT('%',#{queryMap.q_username},'%')</if>
			<if test="queryMap.q_userNo != null and queryMap.q_userNo !=''"  > and user_no like CONCAT('%',#{queryMap.q_userNo},'%')</if>
			<if test="queryMap.password != null and queryMap.password !=''"  > and password= #{queryMap.password}</if>
			<if test="queryMap.roleId != null and queryMap.roleId !=''"  > and role_id= #{queryMap.roleId}</if>
			<if test="queryMap.createTime != null and queryMap.createTime !=''"  > and create_time= #{queryMap.createTime}</if>
			<if test="queryMap.email != null and queryMap.email !=''"  > and email= #{queryMap.email}</if>
			<if test="queryMap.tel != null and queryMap.tel !=''"  > and tel= #{queryMap.tel}</if>
			<if test="queryMap.status != null and queryMap.status !=''"  > and status= #{queryMap.status}</if>
			<if test="queryMap.userType != null and queryMap.userType !=''"  > and user_type= #{queryMap.userType}</if>
		</where>
	</sql>
	
	<update id="update" parameterType="com.iyeed.core.entity.system.SystemUser">
        update [system_user]
    	<set>
			<if test="username != null and username !=''">username= #{username},</if>
			<if test="password != null and password !=''">password= #{password},</if>
			<if test="roleId != null and roleId !=''">role_id= #{roleId},</if>
			<if test="tel != null and tel !=''">tel= #{tel},</if>
			<if test="email != null and email !=''">email= #{email},</if>
			<if test="status != null and status !=''">status= #{status},</if>
			<if test="userNo != null and userNo !=''">user_no= #{userNo},</if>
			<if test="userType != null and userType !=''">user_type= #{userType}</if>
	    </set>
        where id = #{id}
	</update>

	<update id="updateLogins" parameterType="Integer">
		update [system_user]
		set logins = logins + 1
		where id = #{id}
	</update>
	
	<insert id="save" parameterType="com.iyeed.core.entity.system.SystemUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		[system_user]
		(
			
			username,
			password,
			role_id,
			email,
			tel,
			status,
			user_no,
			user_type
		)
		values
		(
			
			#{username},
			#{password},
			#{roleId},
			#{email},
			#{tel},
			#{status},
			#{userNo},
			#{userType}
		)
	</insert>

	<insert id="insertUserBrand" parameterType="com.iyeed.core.entity.system.SystemUserBrand" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into
		[system_user_brand]
		(

			username,
			brand_no
		)
		values
		(

			#{username},
			#{brandNo}
		)
	</insert>
	
</mapper>