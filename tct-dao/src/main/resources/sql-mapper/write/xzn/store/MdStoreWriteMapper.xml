<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iyeed.dao.db.write.xzn.store.MdStoreWriteDao">
	<resultMap id="MdStoreResult" type="com.iyeed.core.entity.store.MdStore">
			<result property="id" column="id" />
			<result property="storeId" column="store_id" />
			<result property="storeNo" column="store_no" />
			<result property="storeCode" column="store_code" />
			<result property="storeName" column="store_name" />
			<result property="brandNo" column="brand_no" />
			<result property="brandCode" column="brand_code" />
			<result property="brandName" column="brand_name" />
			<result property="userNo" column="user_no" />
			<result property="userName" column="user_name" />
			<result property="inputDate" column="input_date" />
	</resultMap>

	<resultMap id="MdStoreBeanResult" type="com.iyeed.core.entity.store.vo.GetStoreListBean">
		<result property="storeNo" column="store_no" />
		<result property="storeName" column="store_name" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="MdStoreResult">
		select
		   *
		from md_store
		where id = #{id}
	</select>

	<select id="getStoreByStoreNo" parameterType="String" resultMap="MdStoreResult">
		select
		*
		from md_store
		where store_no = #{storeNo}
	</select>

	<select id="getStoreList" resultMap="MdStoreBeanResult">
		select
		*
		from md_store
	</select>

	<select id="getStoreListByBrandNo" parameterType="String" resultMap="MdStoreBeanResult">
		select * from
		(
			select id,store_id,store_code,store_no,store_name,brand_no,brand_code,brand_name,user_no,user_name,input_date
			from md_store
			union
			select ms.id,ms.store_id,ms.store_code,sus.user_no store_no,
			case when CHARINDEX('MR',sus.user_no) > 1 then concat(ms.store_name,'-美容坊') when CHARINDEX('AR',sus.user_no) > 1 then concat(ms.store_name,'-Aerin') else ms.store_name end store_name,
			ms.brand_no,ms.brand_code,ms.brand_name,ms.user_no,ms.user_name,ms.input_date
			from md_store ms,system_user_store sus
			where ms.store_no = sus.store_no
		) temp
		where temp.brand_code = (select brand_code from md_brand where brand_no = #{brandNo})
	</select>

	<select id="getBrandStoreListByBrandNo" parameterType="String" resultMap="MdStoreBeanResult">
		select
		*
		from md_store
		where brand_code = (select brand_code from md_brand where brand_no = #{brandNo})
	</select>

	<update id="updateStore" parameterType="String">
		update md_store
		<set>
			<if test="region != null">region= #{region},</if>
			<if test="city != null">city= #{city},</if>
			<if test="channel != null">channel= #{channel},</if>
			<if test="doorType != null">door_type= #{doorType},</if>
			<if test="asm != null">asm= #{asm},</if>
			<if test="ac != null">ac= #{ac}</if>
		</set>
		where store_id = #{storeId} and brand_code = #{brandCode}
	</update>
	
	<update id="update" parameterType="com.iyeed.core.entity.store.MdStore">
        update md_store
    	<set>
			
			<if test="storeId != null">store_id= #{storeId},</if>
			<if test="storeNo != null">store_no= #{storeNo},</if>
			<if test="storeCode != null">store_code= #{storeCode},</if>
			<if test="storeName != null">store_name= #{storeName},</if>
			<if test="brandNo != null">brand_no= #{brandNo},</if>
			<if test="brandCode != null">brand_code= #{brandCode},</if>
			<if test="brandName != null">brand_name= #{brandName},</if>
			<if test="userNo != null">brand_logo= #{user_no},</if>
			<if test="userName != null">brand_logo= #{user_name},</if>
			<if test="inputDate != null">input_date= #{inputDate}</if>
	    </set>
        where id = #{id}
	</update>
	
	<insert id="insert" parameterType="com.iyeed.core.entity.store.MdStore" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		md_store
		(
			store_id,
			store_no,
			store_code,
			store_name,
			brand_no,
			brand_code,
			brand_name,
			user_no,
			user_name
		)
		values
		(
			#{storeId},
			#{storeNo},
			#{storeCode},
			#{storeName},
			#{brandNo},
			#{brandCode},
			#{brandName},
			#{userNo},
			#{userName}
		)
	</insert>
	
</mapper>