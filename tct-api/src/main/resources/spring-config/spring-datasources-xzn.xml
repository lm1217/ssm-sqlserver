<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="xznReadDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${xzn.read.url}" />
        <property name="username" value="${xzn.read.username}" />
        <property name="password" value="${xzn.read.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="200"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
    </bean>

    <!-- 配置sqlSessionFactory -->
	<bean id="xznReadSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="xznReadDataSource" />
		<property name="mapperLocations" value="classpath:sql-mapper/read/xzn/**/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config/mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="com.iyeed.core.entity" />
	</bean>

    <!-- 扫描Mapper -->
    <bean name="xznMapperScannerRead" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.iyeed.dao.db.read.xzn" />
        <property name="sqlSessionFactoryBeanName" value="xznReadSqlSessionFactory" />
    </bean>
	
    <bean id="xznWriteDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${xzn.write.url}" />
        <property name="username" value="${xzn.write.username}" />
        <property name="password" value="${xzn.write.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="200"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
    </bean>

    <!-- 配置sqlSessionFactory -->
	<bean id="xznWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="xznWriteDataSource" />
		<property name="mapperLocations" value="classpath:sql-mapper/write/xzn/**/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config/mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="com.iyeed.core.entity" />
	</bean>

    <!-- 扫描Mapper -->
	<bean name="xznMapperScannerWrite" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.iyeed.dao.db.write.xzn" />
		<property name="sqlSessionFactoryBeanName" value="xznWriteSqlSessionFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="xznWriteDataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>