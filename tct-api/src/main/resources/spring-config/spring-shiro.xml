<?xml version="1.0" encoding="utf-8"?>
<beans default-autowire="byName" xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Shiro安全配置</description>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置超时时间 -->
        <property name="globalSessionTimeout" value="-10000"/>
    </bean>

    <!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
        当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="iyeed.shiro.sesssion"/>
    </bean>

    <!-- 配置Session管理器 -->
    <bean id="shiroSessionManager" class="com.iyeed.api.shiro.ShiroSessionManager">
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>


    <!-- 配置緩存管理器 -->
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!-- 指定 ehcache 的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:spring-config/spring-shiro-ehcache.xml"/>
    </bean>

    <!-- 項目自定义的Realm -->
    <bean id="shiroRealm" class="com.iyeed.api.shiro.ShiroRealm"/>

    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--设置自定义Realm-->
        <property name="realm" ref="shiroRealm"/>
        <!--将缓存管理器，交给安全管理器-->
        <property name="cacheManager" ref="ehCacheManager"/>
        <!--将Session管理器，交给安全管理器-->
        <property name="sessionManager" ref="shiroSessionManager"/>
    </bean>

    <bean id="resourceCheckFilter" class="com.iyeed.api.shiro.ResourceCheckFilter"/>

    <bean id="logoutFilter" class="com.iyeed.api.shiro.ShiroLogoutFilter"/>

    <!-- Shiro Filter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 name 一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 装配安全管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 默认的登陆访问url -->
        <property name="loginUrl" value="/admin/login.html"/>
        <!-- 登陆成功后跳转的url -->
        <property name="successUrl" value="/admin/index.html"/>
        <!-- 没有权限跳转的url -->
        <property name="unauthorizedUrl" value="/admin/unauth.html"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="resourceCheckFilter"/>
                <entry key="logout" value-ref="logoutFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!-- 不需要认证 -->
                /api/system/login.json = anon
                /api/system/adLogin.json = anon
                /api/system/verifyCode.json = anon
                /api/system/logout.json = logout
                <!--/api/system/** = anon-->
                <!--/api/receive/** = anon-->
                <!--/api/form/** = anon-->
                <!--/api/stock/** = anon-->
                <!--/api/store/** = anon-->
                <!--/api/report/** = anon-->
                <!-- 需要认证 -->
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 在方法中 注入  securityManager ，进行代理控制 -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <!--&lt;!&ndash; AOP式方法级权限检查  &ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 启用shrio授权注解拦截方式 &ndash;&gt;-->
    <!--<bean class="org.apache.shiro.spring-config.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->
</beans>